require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '15.0'
install! 'cocoapods', :deterministic_uuids => false

target 'AllAboutOlaf' do
	inhibit_all_warnings!

	config = use_native_modules!

	# Flags change depending on the env values.
	flags = get_default_flags()

	use_react_native!(
		:path => config[:reactNativePath],
		# to enable hermes on iOS, change `false` to `true` and then install pods
		:hermes_enabled => flags[:hermes_enabled],
		:fabric_enabled => flags[:fabric_enabled],
		# An absolute path to your application root.
		:app_path => "#{Pod::Config.instance.installation_root}/.."
	)

	pod 'RNDateTimePicker', :path => '../node_modules/@react-native-community/datetimepicker'

	target 'AllAboutOlafUITests' do
		inherit! :complete
		# Pods for testing
	end

	# Enables Flipper.
	#
	# Note that if you have use_frameworks! enabled, Flipper will not work and
	# you should disable the next line.
	# use_flipper!()
	#
	# In order to build/run without duplicate symbols errors (Flipper-Folly
	# and RCT-Folly) we can downgrade Flipper-DoubleConversion as a stopgap.
	use_flipper!({ "Flipper-DoubleConversion" => "1.1.7" }) 

	post_install do |installer|
		react_native_post_install(installer)
		__apply_Xcode_12_5_M1_post_install_workaround(installer)

		# this looks redundant, but it should help xcode use the buildcache wrappers in CI
		installer.pods_project.targets.each do |target|
			target.build_configurations.each do |config|
				config.build_settings["CC"] = "clang"
				config.build_settings["LD"] = "clang"
				config.build_settings["CXX"] = "clang++"
				config.build_settings["LDPLUSPLUS"] = "clang++"
			end
		end
	end
end
