// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "33.0.0"
        minSdkVersion = 21
        compileSdkVersion = 33
        targetSdkVersion = 33
        kotlinVersion = '1.6.10'
        // react-native-inappbrowser-reborn was using a 1.+ which pulled in an alpha which is very bad
        // - we will want to upgrade to 1.5.0 when we support minsdk 33
        // - we can delete this when inappbrowser-reborn changes their build script to avoid this pattern
        //   but until then, we'll keep it pinned since a future alpha release could cause this problem. 
        androidXBrowser = "1.4.0"
        // We use NDK 23 which has both M1 support and is the side-by-side NDK version from AGP.
        ndkVersion = "23.1.7779620"
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath('com.android.tools.build:gradle:7.3.1')
        classpath("com.facebook.react:react-native-gradle-plugin")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
    }

    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
}

ext {
    ciBuild = (System.getenv("CI") ?: "") != ""
    // allows for -Dpre-dex=false to be set
    preDexEnabled = System.getProperty("pre-dex", "true") == "true"
}

allprojects {
    repositories {
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        mavenCentral {
            // We don't want to fetch react-native from Maven Central as there are
            // older versions over there.
            content {
                excludeGroup "com.facebook.react"
            }
        }
        google()
        maven { url 'https://www.jitpack.io' }
    }
}

subprojects {
    afterEvaluate { project ->
        if (project.hasProperty("android")) {
            android {
                compileSdkVersion rootProject.ext.compileSdkVersion
                buildToolsVersion rootProject.ext.buildToolsVersion

                defaultConfig {
                    targetSdkVersion rootProject.ext.targetSdkVersion
                    minSdkVersion rootProject.ext.minSdkVersion
                }
            }
        }
    }
}
