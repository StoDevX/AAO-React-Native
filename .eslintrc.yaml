---
root: true

parser: '@typescript-eslint/parser'
parserOptions:
  project: './tsconfig.json'

plugins:
  - '@typescript-eslint/eslint-plugin'
  - 'eslint-plugin-babel'
  - 'eslint-plugin-jsx-expressions'
  - 'eslint-plugin-react'
  - 'eslint-plugin-react-native'
  - 'eslint-plugin-react-hooks'
  - '@tanstack/eslint-plugin-query'
  - 'simple-import-sort'
  - 'import'

extends:
  - 'eslint:recommended'
  - 'plugin:react/recommended'
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:@tanstack/eslint-plugin-query/recommended'
  - 'prettier'

settings:
  react:
    version: '16.6'

env:
  es6: true
  react-native/react-native: true

rules:
  array-callback-return: error
  camelcase: warn
  consistent-this: [error, self]
  curly: [warn, multi-line]
  default-case: error
  guard-for-in: error
  eqeqeq: [error, smart]
  linebreak-style: [error, unix]
  new-cap: off
  no-await-in-loop: warn
  no-case-declarations: error
  no-console: off
  no-div-regex: error
  no-extra-label: error
  no-implicit-coercion:
    - error
    - boolean: true
      number: true
      string: true
  no-implicit-globals: error
  no-multi-assign: error
  no-new-symbol: error
  no-restricted-syntax: [error, WithStatement]
  no-return-await: error
  no-throw-literal: error
  no-undef-init: off
  no-underscore-dangle: off
  no-unmodified-loop-condition: error
  no-unused-vars: off
  '@typescript-eslint/no-unused-vars':
    - warn
    - args: 'after-used'
      argsIgnorePattern: '^_'
      varsIgnorePattern: '^_'
  no-useless-constructor: error
  no-var: error
  prefer-const: off
  prefer-promise-reject-errors: error
  prefer-spread: error
  quotes: [warn, single, avoid-escape]
  require-await: warn
  semi: off
  no-misleading-character-class: warn
  require-atomic-updates: error
  no-async-promise-executor: error
  require-unicode-regexp: error

  # react rules – https://github.com/yannickcr/eslint-plugin-react
  react/display-name: off
  react/jsx-curly-brace-presence: [warn, never]
  react/jsx-key: warn
  react/jsx-no-bind:
    - warn
    - ignoreRefs: true
      allowArrowFunctions: true
  react/jsx-sort-props:
    - warn
    - reservedFirst: true
      ignoreCase: false
  react/no-access-state-in-setstate: error
  react/no-did-mount-set-state: error
  react/no-did-update-set-state: error
  react/no-multi-comp: off # prevent multiple component definition per file
  react/no-redundant-should-component-update: warn
  react/no-typos: error
  react/prop-types: off
  react/self-closing-comp: warn # prevent extra closing tags for components without children
  react/sort-comp:
    - warn
    - order:
        - static-variables
        - static-methods
        - type-annotations
        - lifecycle
        - everything-else
        - render
  react/sort-prop-types: warn
  react/wrap-multilines: off
  react/jsx-boolean-value: [error, always]

  # react-native rules
  react-native/no-unused-styles: warn
  react-native/no-inline-styles: warn
  react-native/no-color-literals: warn

  # react hooks rules
  react-hooks/rules-of-hooks: error
  react-hooks/exhaustive-deps: warn

  # TODO(rye): Follow-up: DENY these
  '@typescript-eslint/explicit-module-boundary-types': warn
  '@typescript-eslint/no-empty-function': warn

  # eslint-plugin-jsx-expressions – https://github.com/hpersson/eslint-plugin-jsx-expressions/
  jsx-expressions/strict-logical-expressions: warn

  # eslint-plugin-import https://github.com/import-js/eslint-plugin-import/
  import/first: error
  import/no-duplicates: error

  # eslint-plugin-simple-import-sort https://github.com/lydell/eslint-plugin-simple-import-sort/
  simple-import-sort/exports: error
  simple-import-sort/imports: [
    error,
    groups: [
      # Node.js builtins. You could also generate this regex if you use a `.js` config.
      # For example: `^(${require('module').builtinModules.join('|')})(/|$)`
      # Note that if you use the `node:` prefix for Node.js builtins,
      # you can avoid this complexity: You can simply use '^node:'.
      [
        '^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)',
      ],
      # Packages. `react` related packages come first.
      ['^react', '^@?\\w'],
      # Group the many `react-native-*` imports next.
      ['^react-native-', '^@react-navigation'],
      # Internal packages.
      ['^(@|@frogpond|@hawkrives|components|modules|util|config)(/.*|$)'],
      # Side effect imports.
      ['^\\u0000'],
      # Parent imports. Put `..` last.
      ['^\\.\\.(?!/?$)', '^\\.\\./?$'],
      # Other relative imports. Put same-folder imports and `.` last.
      ['^\\./(?=.*/)(?!/?$)', '^\\.(?!/?$)', '^\\./?$'],
      # Style imports.
      ['^.+\\.s?css$'],
    ],
  ]
