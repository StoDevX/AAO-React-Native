env:
  global:
    # `match` keychain info â€“ the values don't matter, they're defined
    # here so they're consistent throughout
    - MATCH_KEYCHAIN_NAME=travis-ios-keychain
    - MATCH_KEYCHAIN_PASSWORD=alpine
    # dirty hack for https://github.com/travis-ci/travis-ci/issues/5092
    - PATH=${PATH/\.\/node_modules\/\.bin/}
    # sets our node version in one nice place
    - TRAVIS_NODE_VERSION=8
    # set the ruby version up top
    - TRAVIS_RUBY_VERSION=ruby-2.4.1


# As seen in http://stackoverflow.com/a/31882307/2347774
# Prevent travis from building twice for PRs
branches:
  only:
    - master
    - /^travis/
    - /^greenkeeper\//
    - /^v?(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(?:-[\da-z\-]+(?:\.[\da-z\-]+)*)?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?$/


stages:
  - name: Greenkeeper
    if: branch =~ ^greenkeeper\/
  - name: Test
  - name: Deploy Data
    if: branch = master AND env(JS) = yes
  - name: Build + Deploy App


jobs:
  # We define default before_install, install, and before_script steps.
  # To skip the default step, use `step_name: skip`.
  include:
    # Run greenkeeper stuff
    - stage: Greenkeeper
      os: linux
      sudo: false
      language: node_js
      node_js: node # install the latest node
      env: [GREENKEEPER=yes]
      before_install: skip
      install: npm install -g greenkeeper-lockfile@1
      before_script: skip
      script: greenkeeper-lockfile-update
      after_script: greenkeeper-lockfile-upload

    # Do node "tests"
    - stage: Test
      os: linux
      sudo: false
      distro: trusty
      language: node_js
      node_js: $TRAVIS_NODE_VERSION
      env: [JS=yes]
      before_install:
        - npm install -g npm@5 coveralls
      install:
        - npm install || npm install
      before_script:
        - echo "loglevel=silent" >> .npmrc
        - mkdir -p logs/
      script:
        - bash scripts/travis/script-js.sh
      after_script:
        - npm run danger
      after_success:
        - coveralls < ./coverage/lcov.info

    # Deploy the gh-pages data
    - stage: Deploy Data
      os: linux
      sudo: false
      distro: trusty
      language: node_js
      node_js: $TRAVIS_NODE_VERSION
      before_install: skip
      install: skip
      before_script: skip
      script: npm run bundle-data
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_PAGES_TOKEN
        local_dir: docs/

    # Build/deploy the Android binary
    - stage: Build + Deploy
      os: linux
      sudo: required
      distro: trusty
      language: android
      env: [ANDROID=yes]
      android:
        components:
          - tools
          - platform-tools
          - build-tools-23.0.1
          - build-tools-23.0.2
          - build-tools-25.0.1
          - build-tools-25.0.2
          - build-tools-25.0.3
          - build-tools-26.0.1
          - android-23
          - android-25
          - android-26
          - extra-android-m2repository
          - extra-google-m2repository
      script:
        - bundle exec fastlane android ci-run

    # Build/deploy the iOS binary
    - stage: Build + Deploy
      os: osx
      language: objective-c
      osx_image: xcode9
      env: [IOS=yes]
      script:
        - bundle exec fastlane ios ci-run

#
# All of the keys down here are used in each build stage, unless they're overridden.
#

before_install:
  # print some travis debugging info
  - echo "Now testing on $TRAVIS_OS_NAME"
  - echo "Travis branch is $TRAVIS_BRANCH"
  - echo "Travis is in pull request $TRAVIS_PULL_REQUEST"
  - echo "Build triggered by $TRAVIS_EVENT_TYPE"

  # force the ruby we want
  - echo "Using ruby $TRAVIS_RUBY_VERSION (ruby -v says $(ruby -v))"
  - rvm use $TRAVIS_RUBY_VERSION --install --binary --create
  - echo "ruby -v is now $(ruby -v)"
  - gem install bundler

  # only deploy from:
  # - cron-triggered jobs
  # - tagged commits
  # - commits whose messages contain the string [ci run beta]
  - if [[
      $TRAVIS_EVENT_TYPE == "cron" ||
      $TRAVIS_TAG != "" ||
      $TRAVIS_COMMIT_MESSAGE == *"[ci run beta]"*
    ]]; then run_deploy=1; fi

  # force a consistent node version
  - echo "Using node $TRAVIS_NODE_VERSION (node -v says $(node -v))"
  - nvm install "$TRAVIS_NODE_VERSION"
  - nvm use "$TRAVIS_NODE_VERSION"
  - echo "node -v is now $(node -v)"

  # force latest npm
  - npm install -g npm@5


install:
  # install packages (if the first fails, try once more)
  - npm install || npm install

  # install fastlane (if at first you don't succeed, try once more)
  - bundle install || bundle install


before_script:
  # ensure the env file exists and fill it out
  - touch .env.js
  - echo "export const GOOGLE_CALENDAR_API_KEY = '$GCAL_KEY'" >> .env.js
  - echo "export const GOOGLE_MAPS_API_KEY = '$GMAPS_KEY'" >> .env.js

  # disable npm wrapper for npm scripts
  - echo "loglevel=silent" >> .npmrc


before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
  - rm -rf $TMPDIR/jest_preprocess_cache

cache:
  bundler: true
  directories:
    - $HOME/.gradle
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache
