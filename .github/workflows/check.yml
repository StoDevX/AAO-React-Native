name: Check

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  node_version: '^16.0'
  ruby_version: '2.6'
  xcode_version: 'Xcode_13.1'

jobs:
  cache-npm-linux:
    name: Cache npm for Linux
    runs-on: ubuntu-22.04
    outputs:
      cache-key: ${{ steps.node-cache.outputs.cache-primary-key }}
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Extract job definition
        run: yq '.jobs.${{ github.job }}' .github/workflows/check.yml > .github/job.yml

      - uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ runner.os }}-npm-node@${{ env.node_version }}-${{ hashFiles('package-lock.json', '.github/job.yml') }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - uses: actions/cache/save@v3
        with:
          path: node_modules/
          key: ${{ steps.node-cache.outputs.cache-primary-key }}

  cache-npm-macos:
    name: Cache npm for macOS
    runs-on: macos-11
    outputs:
      cache-key: ${{ steps.node-cache.outputs.cache-primary-key }}
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Extract job definition
        run: yq '.jobs.${{ github.job }}' .github/workflows/check.yml > .github/job.yml

      - uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ runner.os }}-npm-node@${{ env.node_version }}-${{ hashFiles('package-lock.json', '.github/job.yml') }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}
          cache: npm

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - uses: actions/cache/save@v3
        with:
          path: node_modules/
          key: ${{ steps.node-cache.outputs.cache-primary-key }}

  prettier:
    name: Prettier
    needs: [cache-npm-linux]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ needs.cache-npm-linux.outputs.cache-key }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: exit 1

      - run: npm run pretty -- --no-write --list-different

  eslint:
    name: ESLint
    needs: [cache-npm-linux]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ needs.cache-npm-linux.outputs.cache-key }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: exit 1

      - run: npm run lint

  jest:
    name: Jest
    needs: [cache-npm-linux]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ needs.cache-npm-linux.outputs.cache-key }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: exit 1

      - run: npm run bundle-data

      - name: Run tests
        run: npm run test -- --coverage

      - name: Upload coverage
        uses: codecov/codecov-action@v3

  tsc:
    name: TypeScript
    needs: [cache-npm-linux]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ needs.cache-npm-linux.outputs.cache-key }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: exit 1

      - run: npm run bundle-data

      - run: npx tsc

  data:
    name: Data
    needs: [cache-npm-linux]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ needs.cache-npm-linux.outputs.cache-key }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: exit 1

      - run: npm run validate-data

      - run: npm run bundle-data

  ios-pods:
    name: iOS Cocoapods
    needs: [cache-npm-macos]
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ needs.cache-npm-macos.outputs.cache-key }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: exit 1

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.ruby_version }}
          bundler-cache: true

      - name: Restore Pods cache
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - run: sudo xcode-select -s /Applications/${{ env.xcode_version }}.app

      - run: bundle exec pod install --deployment
        working-directory: ./ios

  ios-bundle:
    name: iOS Bundle
    needs: [cache-npm-linux]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ needs.cache-npm-linux.outputs.cache-key }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: exit 1

      - run: npm run bundle-data

      - run: npm run bundle:ios

  android-bundle:
    name: Android Bundle
    needs: [cache-npm-linux]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ needs.cache-npm-linux.outputs.cache-key }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: exit 1

      - run: npm run bundle-data

      - run: mkdir -p ./android/app/src/main/assets/

      - run: npm run bundle:android

  android:
    name: Build for Android
    needs: [jest, eslint, android-bundle, cache-npm-linux]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ needs.cache-npm-linux.outputs.cache-key }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: exit 1

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.ruby_version }}
          bundler-cache: true

      - name: Restore Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Raise the fs.inotify ulimits to 524288 watches/queued events/user instances
        run: |
          echo 524288 | sudo tee -a /proc/sys/fs/inotify/max_user_watches
          echo 524288 | sudo tee -a /proc/sys/fs/inotify/max_queued_events
          echo 524288 | sudo tee -a /proc/sys/fs/inotify/max_user_instances
          sudo sysctl -p

      - run: echo 'org.gradle.workers.max=2' >> ./android/gradle.properties

      - run: cd android && ./gradlew androidDependencies --console=plain

      - run: bundle exec fastlane android ci-run
        env:
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          GIT_COMMIT_DESC: $(git log --format=oneline -n 1 $GITHUB_SHA)
          FASTLANE_SKIP_UPDATE_CHECK: '1'
          FASTLANE_DISABLE_ANIMATION: '1'
          SENTRY_ORG: frog-pond-labs
          SENTRY_PROJECT: all-about-olaf
          SENTRY_AUTH_TOKEN: ${{ secrets.HOSTED_SENTRY_AUTH_TOKEN }}
          GITHUB_KEYS_REPOSITORY_TOKEN: ${{ secrets.GITHUB_KEYS_REPOSITORY_TOKEN }}

  ios:
    name: Build for iOS
    needs: [jest, eslint, ios-bundle, ios-pods, cache-npm-macos]
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3.3.0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules cache
        uses: actions/cache/restore@v3
        id: node-cache
        with:
          path: node_modules/
          key: ${{ needs.cache-npm-macos.outputs.cache-key }}

      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: exit 1

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.ruby_version }}
          bundler-cache: true

      - name: Restore Pods cache
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-

      - uses: mikehardy/buildcache-action@v2
        continue-on-error: true
        with:
          cache_key: ${{ matrix.os }}

      - run: sudo xcode-select -s /Applications/${{ env.xcode_version }}.app

      - run: bundle exec pod install --deployment
        working-directory: ./ios

      - run: brew tap wix/brew

      - run: brew install applesimutils

      - run: npx detox build e2e --configuration ios.sim.release

      - run: npx detox test e2e --configuration ios.sim.release --cleanup  --debug-synchronization 500
