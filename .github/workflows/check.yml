name: Check

on:
  push:

jobs:
  cache-npm-linux:
    name: ${{ matrix.os }} cache npm
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-11 ]
        # I'm a little worried about using allowing the minor version to fluctuate across cache hits...
        node: [ ^16.0 ]
        ruby: [ ^2.6 ]
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: actions/cache/restore@v3
        id: cache-restore
        with: 
          path: node_modules/
          key: ${{ runner.os }}-npm-node@${{ matrix.node }}-${{ hashFiles('package-lock.json') }}
      - if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/setup-node@v3
        with: {node-version: '${{ matrix.node }}', cache: npm}
      - if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci
      - if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with: 
          path: node_modules/
          key: ${{ runner.os }}-npm-node@${{ matrix.node }}-${{ hashFiles('package-lock.json') }}
  
  cached-eslint:
    name: eslint - cached
    needs: [cache-npm-linux]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]
        node: [ ^16.0 ]
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: actions/setup-node@v3
        with: {node-version: '${{ matrix.node }}'}
      - uses: actions/cache/restore@v3
        id: cache-restore
        with:
          path: node_modules/
          key: ${{ runner.os }}-npm-node@${{ matrix.node }}-${{ hashFiles('package-lock.json') }}
      - if: steps.cache-restore.outputs.cache-hit != 'true'
        run: exit 1
      - run: npm run lint

  # prettier:
  #   name: Prettier
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v3.3.0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ^16.0
  #         cache: npm
  #     - run: npm ci
  #     - run: npm run pretty -- --no-write --list-different

  eslint:
    name: ESLint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: actions/setup-node@v3
        with:
          node-version: ^16.0
          cache: npm
      - run: npm ci
      - run: npm run lint

  # jest:
  #   name: Jest
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v3.3.0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ^16.0
  #         cache: npm
  #     - run: npm ci
  #     - run: npm run bundle-data
  #     - name: Run tests
  #       run: npm run test -- --coverage
  #     - name: Upload coverage
  #       env:
  #         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  #       run: bash <(curl -s https://codecov.io/bash)

  # tsc:
  #   name: TypeScript
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v3.3.0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ^16.0
  #         cache: npm
  #     - run: npm ci
  #     - run: npm run bundle-data
  #     - run: npx tsc

  # data:
  #   name: Data
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v3.3.0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ^16.0
  #         cache: npm
  #     - run: npm ci
  #     - run: npm run validate-data
  #     - run: npm run bundle-data

  # ios-pods:
  #   name: iOS Cocoapods
  #   runs-on: macos-11
  #   steps:
  #     - uses: actions/checkout@v3.3.0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '^16.0'
  #         cache: npm
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '2.6'
  #         bundler-cache: true
  #     - name: Restore Pods cache
  #       uses: actions/cache@v3
  #       with:
  #         path: ios/Pods
  #         key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pods-
  #     - run: sudo xcode-select -s /Applications/Xcode_13.1.app
  #     - run: npm ci
  #       env: {SKIP_POSTINSTALL: '1'}
  #     - run: bundle exec pod install --deployment
  #       working-directory: ./ios

  # ios-bundle:
  #   name: iOS Bundle
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v3.3.0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ^16.0
  #         cache: npm
  #     - run: npm ci
  #     - run: npm run bundle-data
  #     - run: npm run bundle:ios

  # android-bundle:
  #   name: Android Bundle
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v3.3.0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ^16.0
  #         cache: npm
  #     - run: npm ci
  #     - run: npm run bundle-data
  #     - run: mkdir -p ./android/app/src/main/assets/
  #     - run: npm run bundle:android

  # android:
  #   name: Build for Android
  #   runs-on: ubuntu-22.04
  #   needs: [jest, eslint, android-bundle]
  #   steps:
  #     - uses: actions/checkout@v3.3.0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ^16.0
  #         cache: npm
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '2.6'
  #         bundler-cache: true
  #     - name: Restore Gradle cache
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.gradle/caches
  #           ~/.gradle/wrapper
  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
  #         restore-keys: |
  #           ${{ runner.os }}-gradle-
  #     - run: npm ci
  #     - name: Raise the fs.inotify ulimits to 524288 watches/queued events/user instances
  #       run: |
  #         echo 524288 | sudo tee -a /proc/sys/fs/inotify/max_user_watches
  #         echo 524288 | sudo tee -a /proc/sys/fs/inotify/max_queued_events
  #         echo 524288 | sudo tee -a /proc/sys/fs/inotify/max_user_instances
  #         sudo sysctl -p
  #     - run: echo 'org.gradle.workers.max=2' >> ./android/gradle.properties
  #     - run: cd android && ./gradlew androidDependencies --console=plain
  #     - run: bundle exec fastlane android ci-run
  #       env:
  #         FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
  #         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  #         GIT_COMMIT_DESC: $(git log --format=oneline -n 1 $GITHUB_SHA)
  #         FASTLANE_SKIP_UPDATE_CHECK: '1'
  #         FASTLANE_DISABLE_ANIMATION: '1'
  #         SENTRY_ORG: frog-pond-labs
  #         SENTRY_PROJECT: all-about-olaf
  #         SENTRY_AUTH_TOKEN: ${{ secrets.HOSTED_SENTRY_AUTH_TOKEN }}
  #         GITHUB_KEYS_REPOSITORY_TOKEN: ${{ secrets.GITHUB_KEYS_REPOSITORY_TOKEN }}

  # ios:
  #   name: Build for iOS
  #   runs-on: macos-11
  #   needs: [jest, eslint, ios-bundle, ios-pods]
  #   steps:
  #     - uses: actions/checkout@v3.3.0
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ^16.0
  #         cache: npm
  #     - uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '2.6'
  #         bundler-cache: true
  #     - name: Restore Pods cache
  #       uses: actions/cache@v3
  #       with:
  #         path: ios/Pods
  #         key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
  #         restore-keys: ${{ runner.os }}-pods-
  #     - uses: mikehardy/buildcache-action@v2
  #       continue-on-error: true
  #       with:
  #         cache_key: ${{ matrix.os }}
  #     - run: sudo xcode-select -s /Applications/Xcode_13.1.app
  #     - run: npm ci
  #       env:
  #         SKIP_POSTINSTALL: '1'
  #     - run: bundle exec pod install --deployment
  #       working-directory: ./ios
  #     - run: brew tap wix/brew
  #     - run: brew install applesimutils
  #     - run: npx detox build e2e --configuration ios.sim.release
  #     - run: npx detox test e2e --configuration ios.sim.release --cleanup  --debug-synchronization 500