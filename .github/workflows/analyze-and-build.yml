---
name: Analyze and Build

'on':
  push:
  schedule:
    - cron: '17 8 * * *'

jobs:
  js:
    name: JavaScript Checks
    runs-on: ubuntu-18.04
    env:
      platform: NODE
    steps:
      - uses: actions/setup-node@master
        with: {node-version: ^12.0}
      - uses: actions/checkout@master
      - run: yarn install --frozen-lockfile
      - run: yarn run bundle-data
      - run: yarn run pretty --no-write --list-different
      - run: yarn run flow check
      - run: yarn run lint
      - name: Run tests
        run: yarn run test --coverage
      - name: Upload coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)

  android:
    name: Build for Android
    runs-on: ubuntu-18.04
    env:
      platform: ANDROID
    steps:
      - uses: actions/setup-node@master
        with: {node-version: ^12.0}
      - uses: actions/setup-ruby@master
        with: {ruby-version: ^2.6}
      - uses: actions/checkout@master

      - run: yarn install --frozen-lockfile

      - run: gem install bundler
      - run: bundle install --frozen

      - name: Raise the fs.inotify ulimits
        run: |
          echo 524288 | sudo tee -a /proc/sys/fs/inotify/max_user_watches
          echo 524288 | sudo tee -a /proc/sys/fs/inotify/max_queued_events
          echo 524288 | sudo tee -a /proc/sys/fs/inotify/max_user_instances
          sudo sysctl -p

      - run: cd android && ./gradlew androidDependencies --console=plain
      # - run: echo 'org.gradle.workers.max=2' >> ./android/gradle.properties
      - run: bundle exec fastlane android ci-run
        env:
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MAPBOX_KEY: ${{ secrets.MAPBOX_KEY }}
          ONESIGNAL_KEY: ${{ secrets.ONESIGNAL_KEY }}
          GIT_COMMIT_DESC: $(git log --format=oneline -n 1 $GITHUB_SHA)
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          GITHUB_KEYS_REPOSITORY_TOKEN: ${{ secrets.GITHUB_KEYS_REPOSITORY_TOKEN }}

  ios:
    name: Build for iOS
    runs-on: macOS-10.14
    env:
      platform: IOS
    steps:
      - uses: actions/setup-node@master
        with: {node-version: ^12.0}
      - run: sudo xcode-select -s $XCODE_PATH
      - uses: actions/checkout@master

      - run: yarn install --frozen-lockfile
      - run: gem install bundler:1.17.2
      - run: bundle install --frozen

      - run: ./scripts/ci/propagate-version.rb

      - run: xcodebuild
          -scheme "$XCODE_SCHEME"
          -workspace "$XCODE_WORKSPACE"
          -showBuildSettings
          -derivedDataPath ./ios/build
        name: 'Show Xcode build settings (for Detox)'

      - run: xcodebuild
          -scheme "$XCODE_SCHEME"
          -workspace "$XCODE_WORKSPACE"
          -showBuildSettings
        if: github.event_name == 'schedule' || startsWith(github.ref, 'refs/tags/')
        name: 'Show Xcode build settings (for release)'

      - run: mkdir -p logs/
      - run: ./scripts/ci/ios/discover-products.sh | tee ./logs/products

      - name: 'Maybe initialize CI for signing'
        run: |
          if [[ $MATCH_PASSWORD != '' && $FASTLANE_PASSWORD != '' ]]; then
            ./scripts/ci/authorize-ci-for-keys.rb
            ./scripts/ci/ios/init-keychain.rb > ./keychain.env.sh
            source ./keychain.env.sh
            ./scripts/ci/ios/certificates.sh 'appstore'
          else
            echo 'MATCH_PASSWORD or FASTLANE_PASSWORD was empty; not creating a signing config'
          fi
        env:
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          GITHUB_KEYS_REPOSITORY_TOKEN: ${{ secrets.GITHUB_KEYS_REPOSITORY_TOKEN }}

      - run: xcodebuild
          -scheme "$XCODE_SCHEME"
          -workspace "$XCODE_WORKSPACE"
          -configuration Release
          -destination "platform=iOS Simulator,name=$DETOX_DEVICE,OS=$DETOX_OS"
          -derivedDataPath ./ios/build
          CODE_SIGNING_REQUIRED=NO
          CODE_SIGNING_ALLOWED=NO
          CODE_SIGN_IDENTITY=""
          build | xcpretty
        name: 'Detox: build app for testing'

      - run: brew tap wix/brew
      - run: brew install applesimutils

      - run: yarn detox test e2e --configuration ios.sim.release --cleanup

      - run: xcodebuild
          -scheme "$XCODE_SCHEME"
          -workspace "$XCODE_WORKSPACE"
          -destination generic/platform=iOS
          -archivePath "$GYM_ARCHIVE_PATH"
          archive | xcpretty
        if: github.event_name == 'schedule' || startsWith(github.ref, 'refs/tags/')
        name: '[nightly || beta] Build app for releasing'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - run: bundle exec fastlane run upload_to_testflight
          --distribute_external=true
          --ipa "$(head -n 1 < ./logs/products)"
        if: startsWith(github.ref, 'refs/tags/')
        name: '[beta] Upload to TestFlight'

      - run: bundle exec fastlane run upload_to_testflight
          --distribute_external=false
          --ipa "$(head -n 1 < ./logs/products)"
        if: github.event_name == 'schedule'
        name: '[nightly] Upload to TestFlight'

      - run: ./scripts/ci/sourcemap-create.sh
        if: github.event_name == 'schedule' || startsWith(github.ref, 'refs/tags/')
        name: '[nightly || beta] Generate sourcemap'

      - run: ./scripts/ci/sourcemap-upload.sh
        if: github.event_name == 'schedule' || startsWith(github.ref, 'refs/tags/')
        name: '[nightly || beta] Upload sourcemap to Sentry'

env:
  # The bundle identifier of your app
  APP_IDENTIFIER: 'NFMTHAZVS9.com.drewvolz.stolaf'
  APPLE_APP_ID: 'NFMTHAZVS9.com.drewvolz.stolaf'

  # Your Apple email address
  APPLE_ID: 'aao_bot@fastmail.fm'
  APPLE_DEV_PORTAL_ID: 'hawkrives@gmail.com'

  # Your Apple Developer Team ID, if you are in multiple teams
  TEAM_ID: 'TMK6S7TPX2'
  PILOT_ITC_PROVIDER: 'TMK6S7TPX2'
  ITC_TEAM_ID: '118781268'

  # This is a private key. It is not included in the repository.
  # Contact allaboutolaf@stolaf.edu or another admin if you need access.
  JSON_KEY_FILE: './fastlane/play-private-key.json'
  PACKAGE_NAME: 'com.allaboutolaf'

  # set up global info for `gym`
  XCODE_PROJECT: './ios/AllAboutOlaf.xcodeproj'
  XCODE_WORKSPACE: './ios/AllAboutOlaf.xcworkspace'
  XCODE_SCHEME: 'AllAboutOlaf'
  IOS_INFO_PLIST: './ios/AllAboutOlaf/Info.plist'
  GYM_OUTPUT_DIRECTORY: './ios/build'
  GYM_OUTPUT_NAME: 'AllAboutOlaf'
  GYM_ARCHIVE_PATH: './ios/archive/app.xcarchive'

  MATCH_URL: 'https://github.com/hawkrives/aao-keys'
  GRADLE_FILE: './android/app/build.gradle'
  KEYSTORE_FILE: './android/app/upload-keystore.properties'

  # set up other global shared values
  PRETTY_APP_NAME: 'All About Olaf'
  APPLE_APP_NAME: 'All About Olaf'

  # Configuration variables
  FASTLANE_SKIP_UPDATE_CHECK: '1'
  FASTLANE_DISABLE_ANIMATION: '1'
  SENTRY_ORG: frog-pond-labs
  SENTRY_URL: https://sentry.frogpond.tech/
  SENTRY_PROJECT: all-about-olaf

  # Detox configuration
  XCODE_PATH: '/Applications/Xcode_11.1.app'
  DETOX_DEVICE: 'iPhone 8'
  DETOX_OS: '13.1'
