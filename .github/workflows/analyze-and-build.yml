name: Analyze and Build

'on': push

jobs:
  js:
    name: JavaScript Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@master
        with: {node-version: ^12.0}
      - uses: actions/checkout@master
      - run: yarn install --frozen-lockfile
      - run: yarn run bundle-data
      - run: yarn run pretty
      - run: yarn run flow check
      - run: yarn run lint
      - name: Run tests
        run: yarn run test --coverage
      - name: Upload coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)

  android:
    name: Build for Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@master
        with: {node-version: ^12.0}
      - uses: actions/setup-ruby@master
        with: {ruby-version: ^2.6}
      - uses: actions/checkout@master

      - run: yarn install --frozen-lockfile
      - run: gem install bundler
      - run: bundle install --frozen --path vendor/bundle

      - run: cd android && ./gradlew androidDependencies --console=plain
      - run: echo 'org.gradle.workers.max=2' >> ./android/gradle.properties
      - run: bundle exec fastlane android ci-run
        env:
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MAPBOX_KEY: ${{ secrets.MAPBOX_KEY }}
          ONESIGNAL_KEY: ${{ secrets.ONESIGNAL_KEY }}
          GIT_COMMIT_DESC: $(git log --format=oneline -n 1 $GITHUB_SHA)
          FASTLANE_SKIP_UPDATE_CHECK: '1'
          FASTLANE_DISABLE_ANIMATION: '1'
          SENTRY_PROPERTIES: '../android/sentry.properties'
          GITHUB_KEYS_REPOSITORY_TOKEN: ${{ secrets.GITHUB_KEYS_REPOSITORY_TOKEN }}

  ios:
    name: Build for iOS
    runs-on: macOS-latest
    steps:
      - uses: actions/setup-node@master
        with: {node-version: ^12.0}
      - uses: actions/checkout@master

      - run: yarn install --frozen-lockfile
      - run: gem install bundler
      - run: bundle install --frozen --path vendor/bundle

      - run:
          source ./scripts/ci/env.sh &&
          ./scripts/ci/propagate-version.rb
        env: {platform: IOS}

      - run:
          source ./scripts/ci/env.sh &&
          xcodebuild -scheme "$GYM_SCHEME" -project "$GYM_PROJECT" -showBuildSettings -derivedDataPath ./ios/build
        env: {platform: IOS}
        name: 'Show Xcode build settings (for Detox)'

      - run:
          source ./scripts/ci/env.sh &&
          xcodebuild -scheme "$GYM_SCHEME" -project "$GYM_PROJECT" -showBuildSettings
        if: github.event_name == 'schedule' || startsWith(github.ref, 'refs/tags/')
        env: {platform: IOS}
        name: 'Show Xcode build settings (for release)'

      - run:
          source ./scripts/ci/env.sh &&
          ./scripts/ci/ios/discover-products.sh | tee ./logs/products
        env: {platform: IOS}

      - run:
          source ./scripts/ci/env.sh &&
          ./scripts/ci/authorize-ci-for-keys.rb
        if: secrets.MATCH_PASSWORD != '' && secrets.FASTLANE_PASSWORD != ''
        env: {platform: IOS}
        name: '[signed=true] Authorize CI for GitHub access'

      - run:
          source ./scripts/ci/env.sh &&
          ./scripts/ci/ios/init-keychain.rb > ./keychain.env.sh
        if: secrets.MATCH_PASSWORD != '' && secrets.FASTLANE_PASSWORD != ''
        env: {platform: IOS}
        name: '[signed=true] Initialize local keychain for signing'

      - run:
          source ./scripts/ci/env.sh &&
          source ./keychain.env.sh &&
          ./scripts/ci/ios/certificates.sh 'appstore'
        name: '[signed=true] Initialize signing certificates'
        if: secrets.MATCH_PASSWORD != '' && secrets.FASTLANE_PASSWORD != ''
        env:
          platform: IOS
          GITHUB_KEYS_REPOSITORY_TOKEN: ${{ secrets.GITHUB_KEYS_REPOSITORY_TOKEN }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - run:
          source ./scripts/ci/env.sh &&
          xcodebuild
            -scheme "$GYM_SCHEME" -project "$GYM_PROJECT"
            -configuration Release
            -destination 'platform=iOS Simulator,name=iPhone 7,OS=12.2'
            -derivedDataPath ./ios/build
            CODE_SIGNING_REQUIRED=NO
            CODE_SIGNING_ALLOWED=NO
            CODE_SIGN_IDENTITY=""
            build | xcpretty
        env: {platform: IOS}
        name: 'Detox: build app for testing'

      - run: brew tap wix/brew
      - run: brew install applesimutils

      - run: yarn detox test e2e --configuration ios.sim.release --cleanup
        env: {platform: IOS}

      - run:
          source ./scripts/ci/env.sh &&
          xcodebuild
            -scheme "$GYM_SCHEME"
            -project "$GYM_PROJECT"
            -destination generic/platform=iOS
            -archivePath "$GYM_ARCHIVE_PATH"
            archive | xcpretty
        if: github.event_name == 'schedule' || startsWith(github.ref, 'refs/tags/')
        env: {platform: IOS}
        name: '[nightly || beta] Build app for releasing'

      - run:
          source ./scripts/ci/env.sh &&
          bundle exec fastlane run upload_to_testflight
            --distribute_external=true
            --ipa $(cat ./logs/products)
        if: startsWith(github.ref, 'refs/tags/')
        env: {platform: IOS}
        name: '[beta=true] Upload to TestFlight'

      - run:
          source ./scripts/ci/env.sh &&
          bundle exec fastlane run upload_to_testflight
            --distribute_external=false
            --ipa $(cat ./logs/products)
        if: github.event_name == 'schedule'
        env: {platform: IOS}
        name: '[nightly=true] Upload to TestFlight'

      - run:
          source ./scripts/ci/env.sh &&
          ./scripts/ci/sourcemap-create.sh
        if: github.event_name == 'schedule' || startsWith(github.ref, 'refs/tags/')
        env: {platform: IOS}
        name: '[nightly || beta] Generate sourcemap'

      - run:
          source ./scripts/ci/env.sh &&
          ./scripts/ci/sourcemap-upload.sh
        if: github.event_name == 'schedule' || startsWith(github.ref, 'refs/tags/')
        env: {platform: IOS}
        name: '[nightly || beta] Upload sourcemap to Sentry'
