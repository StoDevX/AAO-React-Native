// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders a button, if given 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "flex": 1,
        "justifyContent": "center",
        "paddingHorizontal": 16,
      },
      undefined,
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    selectable={true}
    style={
      Object {
        "textAlign": "center",
      }
    }
  >
    Label
  </Text>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits="button"
    accessible={true}
    collapsable={undefined}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "rgb(67, 114, 170)",
        "borderRadius": 6,
        "marginVertical": 10,
        "opacity": 1,
        "overflow": "hidden",
        "paddingHorizontal": 20,
        "paddingVertical": 10,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#007aff",
            "fontSize": 17,
            "fontWeight": "500",
            "textAlign": "center",
          },
          null,
          Object {
            "backgroundColor": "transparent",
            "color": "#FFFFFF",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": -0.32,
            "lineHeight": 21,
          },
          null,
        ]
      }
    >
      Button
    </Text>
  </View>
</View>
`;

exports[`renders the given text 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "flex": 1,
        "justifyContent": "center",
        "paddingHorizontal": 16,
      },
      undefined,
    ]
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    selectable={true}
    style={
      Object {
        "textAlign": "center",
      }
    }
  >
    A Label I Am
  </Text>
</View>
`;

exports[`shows an ActivityIndicator if given [spinner] 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "flex": 1,
        "justifyContent": "center",
        "paddingHorizontal": 16,
      },
      undefined,
    ]
  }
>
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="small"
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "padding": 8,
      }
    }
  />
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    selectable={true}
    style={
      Object {
        "textAlign": "center",
      }
    }
  >
    Label
  </Text>
</View>
`;
