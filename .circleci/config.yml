version: 2

x-config:
  - &restore-cache-yarn
    keys:
      - 'v2-dependencies-{{ checksum "yarn.lock" }}'
      - 'v2-dependencies-'
  - &save-cache-yarn
    paths: [~/.cache/yarn]
    key: 'v2-dependencies-{{ checksum "yarn.lock" }}'

workflows:
  version: 2
  analyze:
    jobs:
      - danger
      - flow
      - jest
      - prettier
      - eslint
      - data

jobs:
  danger:
    docker: [{image: 'circleci/node:8'}]
    steps:
      - checkout
      - restore_cache: *restore-cache-yarn
      - run: yarn install
      - save_cache: *save-cache-yarn
      - run: yarn danger --id JS-general

  flow:
    docker: [{image: 'circleci/node:8'}]
    steps:
      - checkout
      - restore_cache: *restore-cache-yarn
      - run: yarn install
      - save_cache: *save-cache-yarn
      - run: mkdir -p logs/
      - run: yarn bundle-data
      - run: yarn flow check --quiet | tee logs/flow
      - run: yarn danger --id JS-flow

  jest:
    docker: [{image: 'circleci/node:8'}]
    steps:
      - checkout
      - restore_cache: *restore-cache-yarn
      - run: yarn install
      - save_cache: *save-cache-yarn
      - run: mkdir -p logs/
      - run: yarn bundle-data
      - run: yarn test --coverage 2>&1 | tee logs/jest
      - run: yarn danger --id JS-jest
      # install coveralls for code coverage
      - run: yarn global add coveralls
      - run: |
          export PATH=$PATH:$(yarn global bin)
          export COVERALLS_SERVICE_NAME=CircleCI
          export COVERALLS_SERVICE_JOB_ID=$CIRCLE_BUILD_NUM
          coveralls < ./coverage/lcov.info

  prettier:
    docker: [{image: 'circleci/node:8'}]
    steps:
      - checkout
      - restore_cache: *restore-cache-yarn
      - run: yarn install
      - save_cache: *save-cache-yarn
      - run: mkdir -p logs/
      - run: yarn prettier
      - run: |
          if ! git diff --quiet *.js source/ scripts/; then
            git diff *.js source/ scripts/ | tee logs/prettier
          fi
      - run: yarn danger --id JS-prettier

  eslint:
    docker: [{image: 'circleci/node:8'}]
    steps:
      - checkout
      - restore_cache: *restore-cache-yarn
      - run: yarn install
      - save_cache: *save-cache-yarn
      - run: mkdir -p logs/
      - run: yarn bundle-data
      - run: yarn lint | tee logs/eslint
      - run: yarn danger --id JS-lint

  data:
    docker: [{image: 'circleci/node:8'}]
    steps:
      - checkout
      - restore_cache: *restore-cache-yarn
      - run: yarn install
      - save_cache: *save-cache-yarn
      - run: mkdir -p logs/
      - run: yarn validate-data --quiet | tee logs/validate-data
      - run: yarn validate-bus-data | tee logs/validate-bus-data
      - run: yarn danger --id JS-data
