---
version: 2.1

executors:
  node:
    docker: [{image: 'circleci/node:10'}]

  ruby:
    docker: [{image: 'circleci/ruby:2.5.5'}]

commands:
  bundler-cache:
    description: 'Save the Bundler cache'
    steps:
      - save_cache:
          key: &bundler-cache-key >-
            v2-ruby-dependencies
            {{ arch }}
            {{ checksum "Gemfile.lock" }}
          paths: [./vendor/bundle]

  bundler-restore:
    description: 'Restore the Bundler cache'
    steps:
      - restore_cache:
          key: *bundler-cache-key

  danger:
    description: 'Run Danger'
    steps:
      - run:
          command: if ! [[ $CIRCLE_PR_NUMBER ]]; then yarn run danger --id $task; fi
          when: always
          environment:
            DANGER_DISABLE_TRANSPILATION: 'true'

  gradle-cache:
    description: 'Save the Gradle cache'
    steps:
      - save_cache:
          key: &gradle-cache-key >-
            v1-gradle-dependencies
            {{ arch }}
            {{ checksum "android/gradle/wrapper/gradle-wrapper.properties" }}
            {{ checksum "android/build.gradle" }}
            {{ checksum "android/settings.gradle" }}
            {{ checksum "android/app/build.gradle" }}
            {{ checksum "node_modules/react-native/package.json" }}
          paths: [~/.gradle]

  gradle-restore:
    description: 'Restore the Gradle cache'
    steps:
      - restore_cache:
          key: *gradle-cache-key

  set-ruby-version:
    description: 'Set the Ruby Version'
    steps:
      - run: echo "ruby-2.5.5" > ~/.ruby-version

  workspace-persist-node_modules:
    description: 'Persist node_modules'
    steps:
      - persist_to_workspace:
          root: ./node_modules
          paths: [./*]

  workspace-attach-node_modules:
    description: 'Attach to node_modules'
    steps:
      - attach_workspace:
          at: ./node_modules

  yarn-cache:
    description: 'Save the Yarn cache'
    steps:
      - save_cache:
          key: &yarn-cache-key >-
            v3-yarn-dependencies
            {{ arch }}
            {{ checksum "yarn.lock" }}
          paths: [~/.cache/yarn, ~/Library/Caches/Yarn]

  yarn-restore:
    description: 'Restore the Yarn cache'
    steps:
      - restore_cache:
          key: *yarn-cache-key

workflows:
  version: 2
  analyze-and-build:
    # The way this works is, Circle runs analyze-and-build on every commit
    # to every branch.
    # Fastlane checks the environment to see if it should build or deploy,
    # and if there's a tag then it deploys (otherwise it just builds.)
    # These same jobs are run by the "nightly" workflow, which has a
    # different CIRCLE_WORKFLOW_ID, which should allow us to only deploy
    # nightlies from that branch.
    jobs: &basic-jobs
      - cache-yarn-linux:
          filters: &filters {tags: {only: /.*/}}
      - cache-bundler-linux:
          filters: &filters {tags: {only: /.*/}}
      - danger:
          filters: *filters
          requires: [cache-yarn-linux]
      - flow:
          filters: *filters
          requires: [cache-yarn-linux]
      - jest:
          filters: *filters
          requires: [cache-yarn-linux]
      # - yarn-dedupe:
      #     filters: *filters
      #     requires: [cache-yarn-linux]
      - prettier:
          filters: *filters
          requires: [cache-yarn-linux]
      - eslint:
          filters: *filters
          requires: [cache-yarn-linux]
      - data:
          filters: *filters
          requires: [cache-yarn-linux]
      - ios:
          filters: *filters
          requires: [danger, flow, jest, prettier, eslint, data]
      - android:
          filters: *filters
          requires:
            [danger, flow, jest, prettier, eslint, data, cache-bundler-linux]
      - ios-bundle:
          filters: *filters
          requires: [danger, flow, jest, prettier, eslint, data]
      - android-bundle:
          filters: *filters
          requires: [danger, flow, jest, prettier, eslint, data]
  nightly:
    triggers:
      - schedule:
          cron: 17 8 * * *
          filters: {branches: {only: [master]}}
    jobs:
      - cache-yarn-linux
      - cache-bundler-linux
      - danger: {requires: [cache-yarn-linux]}
      - flow: {requires: [cache-yarn-linux]}
      - jest: {requires: [cache-yarn-linux]}
      - prettier: {requires: [cache-yarn-linux]}
      - eslint: {requires: [cache-yarn-linux]}
      - data: {requires: [cache-yarn-linux]}
      - ios-nightly:
          requires: [danger, flow, jest, prettier, eslint, data]
      - android-nightly:
          requires:
            [danger, flow, jest, prettier, eslint, data, cache-bundler-linux]

jobs:
  cache-yarn-linux:
    executor: node
    steps:
      - checkout
      - yarn-restore
      - run: yarn install --frozen-lockfile
      - run: yarn --version
      - yarn-cache
      - workspace-persist-node_modules

  cache-bundler-linux:
    executor: ruby
    steps:
      - checkout
      - set-ruby-version
      - bundler-restore
      - run: gem --version
      - run: ruby --version
      - run: gem install bundler
      - run: bundle check || bundle install --frozen --path ./vendor/bundle
      - run: bundle --version
      - bundler-cache

  danger:
    executor: node
    environment:
      task: JS-general
    steps:
      - checkout
      - workspace-attach-node_modules
      - danger

  flow:
    executor: node
    environment:
      task: JS-flow
    steps:
      - checkout
      - workspace-attach-node_modules
      - run: mkdir -p logs/
      - run: yarn run bundle-data
      - run: yarn run --silent flow check --quiet | tee logs/flow
      - danger

  jest:
    executor: node
    environment:
      task: JS-jest
      JEST_JUNIT_OUTPUT: ./test-results/jest/junit.xml
    steps:
      - checkout
      - workspace-attach-node_modules
      - run: mkdir -p logs/ test-results/jest/
      - run: yarn run bundle-data
      - run: yarn run --silent test --coverage | tee logs/jest
      - danger
      - store_test_results:
          path: ./test-results
      - run: yarn global add coveralls
      - run:
          name: coveralls
          command: |
            export PATH=$PATH:$(yarn global bin)
            export COVERALLS_SERVICE_NAME=CircleCI
            export COVERALLS_SERVICE_JOB_ID=$CIRCLE_BUILD_NUM
            if ! [[ $CIRCLE_PR_NUMBER ]]; then
              coveralls < ./coverage/lcov.info
            fi

  prettier:
    executor: node
    environment:
      task: JS-prettier
    steps:
      - checkout
      - workspace-attach-node_modules
      - run: mkdir -p logs/
      - run: yarn run pretty
      - run:
          name: git diff
          command: |
            touch logs/prettier  # to ensure that the file exists
            if ! git diff --quiet --stat; then
              git diff | tee logs/prettier
              exit 1
            fi
      - danger

  yarn-dedupe:
    executor: node
    environment:
      task: JS-yarn-dedupe
    steps:
      - checkout
      - workspace-attach-node_modules
      - run: mkdir -p logs/
      - run: yarn run d
      - run:
          name: git diff
          command: |
            touch logs/yarn-dedupe
            if ! git diff --quiet --stat; then
              git diff | tee logs/yarn-dedupe
              exit 1
            fi
      - danger

  eslint:
    executor: node
    environment:
      task: JS-lint
    steps:
      - checkout
      - workspace-attach-node_modules
      - run: mkdir -p logs/ test-results/eslint/
      - run: yarn run bundle-data
      - run: yarn run --silent lint | tee logs/eslint
      - run: yarn run --silent lint --format junit > test-results/eslint/junit.xml
      - danger
      - store_test_results:
          path: ./test-results

  data:
    executor: node
    environment:
      task: JS-data
    steps:
      - checkout
      - workspace-attach-node_modules
      - run: mkdir -p logs/
      - run: yarn run --silent validate-data --quiet | tee logs/validate-data
      - run: yarn run --silent validate-bus-data | tee logs/validate-bus-data
      - run: yarn run bundle-data
      - run: yarn run compress-data
      - store_artifacts:
          path: ./docs/
      - danger

  android: &android
    # we pass the `command:` key to solve a weird issue (see GitHub PRs 2170 and 2173).
    # this overrides the thing and forces the container to run /bin/bash as the "command"
    # so it doesn't get confused and OOM/exhaust the build resources (don't ask me)
    docker: [{image: 'circleci/android:api-28-node', command: '/bin/bash'}]
    environment: &android-env
      task: ANDROID
      FASTLANE_SKIP_UPDATE_CHECK: '1'
      FASTLANE_DISABLE_ANIMATION: '1'
      SENTRY_PROPERTIES: '../android/sentry.properties'
    steps:
      - checkout
      - run:
          name: 'Reconcile Git histories'
          command: |
            if [ -z "$CIRCLE_TAG" ];
            then
              git checkout master
              git reset --hard origin/master
              git checkout "$CIRCLE_BRANCH"
              git reset --hard "origin/$CIRCLE_BRANCH"
            else
              echo "CIRCLE_TAG was set, didn't do anything"
            fi
      - run: mkdir -p logs/
      - run: touch logs/build-status
      - run:
          name: Skip build if possible
          command: ./scripts/should-skip-build && circleci step halt || echo "Build continuing."
      - run: node --version
      - run: yarn --version
      - run: cd android && ./gradlew --version
      - set-ruby-version
      - workspace-attach-node_modules
      - bundler-restore
      - run: bundle check || bundle install --frozen --path ./vendor/bundle
      - gradle-restore
      - run:
          name: Download Android dependencies
          command: cd android && ./gradlew androidDependencies --console=plain
          environment:
            TERM: xterm-256color
      - gradle-cache
      - run: echo 'org.gradle.workers.max=2' >> ./android/gradle.properties
      - run:
          name: Run Fastlane
          command: bundle exec fastlane android ci-run | tee ./logs/build
          environment:
            GIT_COMMIT_DESC: $(git log --format=oneline -n 1 $CIRCLE_SHA1)
      - danger

  android-nightly:
    <<: *android
    environment:
      <<: *android-env
      IS_NIGHTLY: '1'

  android-bundle:
    executor: node
    environment:
      task: JS-bundle-android
    steps:
      - checkout
      - workspace-attach-node_modules
      - run: mkdir -p logs/
      - run: yarn run bundle-data
      - run: yarn run --silent bundle:android
      - store_artifacts:
          path: ./android/app/src/main/assets/index.android.bundle
          destination: android.jsbundle
      - store_artifacts:
          path: ./android/app/src/main/assets/index.android.bundle.map
          destination: android.jsbundle.map
      - danger

  ios: &ios
    macos: {xcode: '10.2.0'}
    environment: &ios-env
      task: IOS
      FASTLANE_SKIP_UPDATE_CHECK: '1'
      FASTLANE_DISABLE_ANIMATION: '1'
      HOMEBREW_NO_AUTO_UPDATE: '1'
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      SENTRY_PROPERTIES: '../ios/sentry.properties'
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run:
          name: 'Reconcile Git histories'
          command: |
            if [ -z "$CIRCLE_TAG" ];
            then
              git checkout master
              git reset --hard origin/master
              git checkout "$CIRCLE_BRANCH"
              git reset --hard "origin/$CIRCLE_BRANCH"
            else
              echo "CIRCLE_TAG was set, didn't do anything"
            fi
      - run: mkdir -p logs/
      - run: touch logs/build-status
      - run:
          name: Skip build if possible
          command: ./scripts/should-skip-build && circleci step halt || echo "Build continuing."
      - run: yarn --version
      - set-ruby-version
      - yarn-restore
      - run: yarn install --frozen-lockfile
      - yarn-cache
      - bundler-restore
      - run: gem install bundler
      - run: bundle check || bundle install --frozen --path ./vendor/bundle
      - bundler-cache
      - run: brew tap wix/brew
      - run: brew install applesimutils
      - run:
          name: Run Fastlane
          command: bundle exec fastlane ios ci-run | tee ./logs/build
          environment:
            GIT_COMMIT_DESC: $(git log --format=oneline -n 1 $CIRCLE_SHA1)
      - run: yarn detox build e2e --configuration ios.sim.release | xcpretty
      - run: yarn detox test e2e --configuration ios.sim.release --cleanup
      - store_artifacts: {path: ./ios/build/AllAboutOlaf.app.dSYM.zip}
      - store_artifacts: {path: ./ios/build/AllAboutOlaf.ipa}
      - run:
          name: Analyze Fastlane Logfile
          command: python2 ./scripts/analyze-gym.py -s 20 < ./logs/build | tee ./logs/analysis || true
      - danger

  ios-nightly:
    <<: *ios
    environment:
      <<: *ios-env
      IS_NIGHTLY: '1'

  ios-bundle:
    executor: node
    environment:
      task: JS-bundle-ios
    steps:
      - checkout
      - workspace-attach-node_modules
      - run: mkdir -p logs/
      - run: yarn run bundle-data
      - run: yarn run --silent bundle:ios
      - store_artifacts:
          path: ./ios/AllAboutOlaf/main.jsbundle
          destination: ios.jsbundle
      - store_artifacts:
          path: ./ios/AllAboutOlaf/main.jsbundle.map
          destination: ios.jsbundle.map
      - danger
